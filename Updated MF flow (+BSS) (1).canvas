{
	"nodes":[
		{"type":"group","id":"5243bb713cce56fe","x":-1060,"y":-1320,"width":1340,"height":2360,"label":"order creation (CreateMutualFundSubscriptionOrderCommandHandler)"},
		{"type":"group","id":"3b80294a9bfa844b","x":-640,"y":4350,"width":1550,"height":1440,"label":"booking status resolved"},
		{"type":"group","id":"79949695bdfd8ecc","x":-360,"y":2040,"width":1520,"height":1440,"label":"create booking (ProcessMutualFundFiatPendingSubscriptionOrderCommandHandler)"},
		{"type":"group","id":"479863485d6428fd","x":2680,"y":3820,"width":1272,"height":1370,"label":"subscribe cost refundÂ  (ProcessMutualFundSubscribeRefundCommandHandler)"},
		{"type":"group","id":"004780045ca33324","x":-640,"y":-320,"width":900,"height":1040,"color":"#757575","label":"charge user"},
		{"type":"group","id":"22b8c7da9b645c87","x":2680,"y":5490,"width":1044,"height":730,"color":"6","label":"event handler"},
		{"type":"group","id":"7881e466bdbc5759","x":-1900,"y":4080,"width":860,"height":760,"label":"back office tasks"},
		{"type":"group","id":"9cfd543d0e52e748","x":410,"y":1200,"width":1044,"height":600,"color":"6","label":"event handler"},
		{"type":"group","id":"17bd59f7766e8994","x":2700,"y":4610,"width":1080,"height":560,"label":"standard refund"},
		{"type":"group","id":"634590da75aa73af","x":-340,"y":2120,"width":640,"height":840,"color":"#757575","label":"booking on tanamduit"},
		{"type":"group","id":"c9b75bc86ea96e05","x":-619,"y":-100,"width":859,"height":620,"label":"[case] standard charge"},
		{"type":"group","id":"634dc101b36444b6","x":-620,"y":4880,"width":590,"height":740,"color":"6","label":"event handler"},
		{"type":"group","id":"e94797e97997de08","x":-1040,"y":-1260,"width":560,"height":760,"color":"#757575","label":"validate request"},
		{"type":"group","id":"74edf96da8f831a0","x":-1880,"y":4140,"width":820,"height":480,"label":"(daily) EOD/cut-off process"},
		{"type":"group","id":"43850fbb85f184b5","x":-320,"y":2180,"width":600,"height":460,"label":"[case] standard booking"},
		{"type":"group","id":"d3c640358f7998f8","x":2702,"y":3120,"width":540,"height":400,"color":"6","label":"event handler"},
		{"type":"group","id":"33fe1154e20ebe14","x":170,"y":4660,"width":560,"height":320,"label":"daily buy order worker"},
		{"type":"group","id":"03f8f9c9e62584ec","x":-320,"y":3240,"width":640,"height":220,"color":"#757575","label":"booking created (pending)"},
		{"type":"group","id":"b05c647a3ef282c2","x":-1780,"y":4680,"width":620,"height":140,"label":"(3rd-party) fund manager operations"},
		{"type":"group","id":"857fbaa5f173651f","x":-620,"y":600,"width":860,"height":100,"label":"[case] magic params (banking succeeded)"},
		{"type":"group","id":"2e0601ea264586c4","x":-619,"y":-260,"width":859,"height":100,"label":"[case] magic params (banking rejected)"},
		{"type":"group","id":"4e93d75977b344b3","x":400,"y":3040,"width":640,"height":120,"color":"#757575","label":"booking failed"},
		{"type":"group","id":"3ae30c505b7bf752","x":190,"y":4820,"width":520,"height":140,"label":"loop"},
		{"type":"group","id":"abff90d9fa3e486a","x":-320,"y":2700,"width":600,"height":100,"label":"[case] magic params (Tanamduit rejected)"},
		{"type":"group","id":"7d29f74c5c1c316b","x":-320,"y":2840,"width":600,"height":100,"label":"[case] magic params (Tanamduit filled)"},
		{"type":"text","text":"- when BPR-based account is used\n```typescript\nbprApi.createInterbankTransfer({\n   senderAccountId: accountId, // account ID of the (buying) customer\n   nexReferenceId: referenceId, // a reference to the transfer record (stored in Nex)\n   receiverAccountName: bprNtdAccountName, // main BPR NTD account\n   receiverAccountNumber: bprNtdAccountNumber, // main BPR NTD account\n   receiverAccountBankCode: bprNtdAccountBankCode, // main BPR NTD account\n   amount, // the exact amount from API request\n   description: MF_BANKING_CHARGE_TRANSFER_DESCRIPTION, // a static description\n})\n```","id":"9a53c998a3d351f4","x":-602,"y":-80,"width":822,"height":240},
		{"type":"text","text":"- check if given amount matches `MF_BANKING_SUCCEEDED_MAGIC_PARAMS`","id":"7badf4d3c909d4a8","x":-602,"y":620,"width":822,"height":60},
		{"type":"text","text":"- check if given amount matches `MF_BANKING_REJECTED_MAGIC_PARAMS`","id":"95b6be53d16e5b23","x":-582,"y":-240,"width":802,"height":60},
		{"type":"text","text":"- when BAAS-based account is used\n```typescript\nbaasApi.transfer({\n   referenceId, // a reference to the transfer record (stored in Nex)\n   accountId, // account ID of the (buying) customer\n   channelCode: BAAS_TRANSFER_PARAMS.TRANSFER_CHANNEL_CODE_OF_BPR, // bank code of BPR NTD account\n   accountOwnerName: BAAS_TRANSFER_PARAMS.VIRTUAL_ACCOUNT_NAME, // account name of the VA under BPR NTD\n   accountNumber: BAAS_TRANSFER_PARAMS.VIRTUAL_ACCOUNT_NUMBER, // account number of the VA under BPR NTD\n   description: MF_BANKING_CHARGE_TRANSFER_DESCRIPTION, // a static description\n   amount: String(amount), // the exact amount from API request\n   currency: 'IDR'\n})\n```\n- (note) baas transfers are synchronous\n   - so instead of listening from the webhook, we currently manually triggers the transfer completed event once we get a 200 response","id":"c67a11d815803cb5","x":-602,"y":180,"width":822,"height":320},
		{"type":"text","text":"- **API RESPONSE**\n- order created successfully\n \n```json\n{\n  \"id\": \"335bee52-4597-456a-ba67-2b13f389a2a3\",\n  \"mutualFundProduct\": {\n    \"id\": \"0b676db1-7c34-43d5-8ee1-20e803f2d42c\",\n    \"platformName\": \"Sucorinvest Money Market Fund\",\n    \"providerProductCode\": \"GAMA2MMCMONEYM00\"\n  },\n  \"fee\": {\n    \"amount\": \"0\",\n    \"currency\": \"IDR\"\n  },\n  \"mutualFundEnvelopeId\": \"02e009c5-d40b-45df-a59a-849f3a2a1f10\",\n  \"amount\": {\n    \"amount\": \"50025\",\n    \"currency\": \"IDR\"\n  },\n  \"createdAt\": \"2022-10-17T06:12:30.096Z\",\n  \"updatedAt\": \"2022-10-17T06:12:30.160Z\",\n  \"status\": \"PENDING\",\n  \"side\": \"SUBSCRIPTION\",\n  \"subscribePayment\": {\n    \"transactionId\": \"619d65f2-76ef-4668-a810-df94316411b0\"\n  },\n  \"subscribeRefundPayment\": null,\n  \"units\": {\n    \"amount\": \"1.5000003\",\n    \"productId\": \"0b676db1-7c34-43d5-8ee1-20e803f2d42c\"\n  },\n  \"redeemPayment\": null\n}\n```","id":"222a70ff84129ed7","x":-2222,"y":-258,"width":604,"height":616},
		{"type":"text","text":"(pending) order created (200)","id":"ac9e3b0194b99c5d","x":-2030,"y":840,"width":220,"height":50},
		{"type":"text","text":"Mobile (FE)","id":"c74687bf42fdf37a","x":-2020,"y":-1040,"width":200,"height":50},
		{"type":"text","text":"- **REST API**\n- POST `/mutual-funds/subscribe`\n- payload\n```json\n{\n  \"envelopeId\": \"uuid-of-mf-envelope-xxxx-xxxx\",\n  \"mfProductId\": \"uuid-of-mf-product-xxxx-xxxx\",\n  \"estimatedUnits\": \"1.5556 (string-based decimals)\",\n  \"amount\": \"25000 (string-based decimals)\",\n  \"bankingClientId\": \"uuid-of-banking-client-xxxx-xxxx\",\n  \"pin\": \"123456\"\n}\n```","id":"81d501f5f0d7cbe0","x":-1720,"y":-990,"width":509,"height":271},
		{"type":"text","text":"- rollback order in DB","id":"7bd2fcef7e9ae0e5","x":-1040,"y":80,"width":200,"height":60},
		{"type":"text","text":"request error (400/500)","id":"b877fb8f4fc13487","x":-1565,"y":-313,"width":200,"height":55},
		{"type":"text","text":"- valid product-id\n   - product exists in `mutual_fund_products`\n   - product must be in `LISTED_TRADABLE` status\n---\n- valid mutual fund envelope used\n   - should be a mutul fund envelope with type `CUSTOM` + status `ACTIVE`\n---\n- user being a valid MF customer (passed KYC)\n   - BE -> use should own at least one `ACTIVE` `mutual_fund_client` \n---\n- must not violate any existing trade locks\n   - product should not be locked\n   - global lock must not be applied\n   - mutual fund envelope must not be locked by admin\n---\n- valid payment method\n   - should be an active `banking_client`\n   - it's either a `BPR` or `BAAS` based bank account\n---\n- ordered `amount` should follow 3rd-party booking rules\n   - `providerProductMinFirstBuy`\n   - `providerProductMinBuy`\n   - `MAX_TRANSFER_AMOUNT`","id":"bf056e19982c2c41","x":-1020,"y":-1240,"width":520,"height":580},
		{"type":"text","text":"- find currect active ledger (to be include in the transfer batch)\n   - find latest `ACTIVE` record in `mutual_fund_partner_remittance_ledger`\n   - set `MutualFundOrder.mutualFundPartnerRemittanceLedgerId`\n      - to indicate which transfer batch this order belongs to","id":"954c89153284c3a9","x":-1020,"y":-640,"width":520,"height":120},
		{"type":"text","text":"- got `RESPONSE.txnId`\n- store `MutualFundOrder`\n   - `status: TRANSFER_PENDING`\n   - `exectutedUnits: null`\n- store `MutualFundTransaction` (only when it's a standard charge)\n   - `status: PENDING`\n   - `amount: PARAMS.amount`","id":"5c84615b28645aff","x":-760,"y":820,"width":616,"height":200},
		{"type":"text","text":"- check if given amount matches `TANAMDUIT_FILLED_MP`","id":"af8f99b3d6d8f9b6","x":-302,"y":2860,"width":562,"height":60},
		{"type":"text","text":"- IN\n  - `BANKING_ADAPTER_EVENTS.BPR_SUBSCRIBE_TRANSFER_FAILED`\n  - `BANKING_ADAPTER_EVENTS.BAAS_SUBSCRIBE_TRANSFER_FAILED`","id":"c007ab3eeb218238","x":943,"y":1380,"width":492,"height":80},
		{"type":"text","text":"- OUT\n   - `APPLICATION_EVENTS.SUBSCRIBE_CHARGE_FAILED`","id":"e12b3a0484c9199c","x":943,"y":1720,"width":492,"height":60,"color":"1"},
		{"type":"text","text":"- failed transfer\n   - store `MutualFundOrder`\n   - `status: TRANSFER_FAILED`\n   - `exectutedUnits: null`\n- store `MutualFundTransaction` (only when it's a standard charge)\n   - `status: FAILED`","id":"46f9f3c70f9162d6","x":943,"y":1510,"width":492,"height":160},
		{"type":"text","text":"- user sees a cancelled order (on mobile)","id":"b066085f5015ba1c","x":1560,"y":1720,"width":359,"height":60,"color":"3"},
		{"type":"text","text":"BPR transfer webhook","id":"4c9ade30159bb7cd","x":1919,"y":990,"width":250,"height":60},
		{"type":"file","file":"event table.md","id":"74f389e4d853234b","x":2792,"y":680,"width":360,"height":610,"color":"6"},
		{"type":"text","text":"- got `RESPONSE.orderRef`\n- store `MutualFundOrder`\n   - `status: ASSET_TXN_PENDING`\n- store `TanamduitLedger`\n   - `providerOrderId: RESPONSE.orderRef`\n   - `trxUnit: null`\n   - `statusCategory: null`","id":"9c859800fc676287","x":-302,"y":3260,"width":602,"height":180},
		{"type":"text","text":"- store `MutualFundOrder`\n   - `status: ASSET_TXN_REJECTED`","id":"d2eae994b6470c18","x":420,"y":3060,"width":600,"height":80},
		{"type":"text","text":"BAAS transfer webhook\n- we currently don't use this, instead triggering the processed event directly from the order creation process (as baas transfers are async)","id":"ebd3d6ffff5186f1","x":1435,"y":740,"width":365,"height":140},
		{"type":"text","text":"- IN\n  - `BANKING_ADAPTER_EVENTS.BPR_SUBSCRIBE_TRANSFER_COMPLETED`\n  - `BANKING_ADAPTER_EVENTS.BAAS_SUBSCRIBE_TRANSFER_COMPLETED`","id":"b7998624053c3455","x":434,"y":1380,"width":492,"height":80},
		{"type":"text","text":"- completed transfer\n   - store `MutualFundOrder`\n   - `status: TRANSFER_COMPLETED`\n   - `exectutedUnits: null`\n- store `MutualFundTransaction`\n   - `status: COMPLETED`\n   - `amount: RECORD.amount`","id":"0b9f6513403f7e2d","x":434,"y":1500,"width":492,"height":180},
		{"type":"text","text":"- OUT\n   - `APPLICATION_EVENTS.SUBSCRIBE_CHARGE_PAID`","id":"b2910d39375e8705","x":434,"y":1720,"width":492,"height":60,"color":"4"},
		{"type":"text","text":"- transfer status\n   - `COMPLETED`\n   - `FAILED`","id":"077749cdaf40839b","x":836,"y":1220,"width":180,"height":80},
		{"type":"text","text":"- IN\n  - `APPLICATION_EVENTS.SUBSCRIBE_ASSET_BOOKING_COMPLETED`\n  - (old) `SUBSCRIBE_ORDER.ASSET_TXN_UPDATED`","id":"e6974ca5229c8fa1","x":-600,"y":4900,"width":550,"height":80},
		{"type":"text","text":"- `ProcessMutualFundSubscribeOrderCommandHandler.ts`\n```typescript\nuseraccesskey = tanamduitApi.postAccUserAccess(email, userId, ct)\ntxnResult = tanamduitApi.getActivity(orderRef, useraccesskey)\n{ statusCategory } = txnResult\n```  ","id":"8bbfbbcdd947e103","x":-600,"y":5020,"width":550,"height":140},
		{"type":"text","text":"- send slack tech error","id":"5ed9e1ed23ff73c7","x":-600,"y":5300,"width":265,"height":60},
		{"type":"text","text":"- `BatchCheckMutualFundSubscribeOrderStatusCommandHandler.ts` \n- find every pending `MutualOrder`\n- find their asset booking `orderId` from `TanamduitLedger`","id":"adf45bdd14734f56","x":190,"y":4680,"width":520,"height":80},
		{"type":"text","text":"- check if given amount matches `TANAMDUIT_REJECTED_MP`","id":"54a217ce38f16914","x":-302,"y":2720,"width":562,"height":60},
		{"type":"text","text":"- get user access key from Tanamduit\n\n```typescript\ntanamduitApi.postAccUserAccess({\n   email: tanamduitRegisteredEmail,\n   userId: tanamduitRegisteredUserId,\n   customerType: tanamduitRegisteredCustomerType,\n})\n```","id":"2620bdace78d6b68","x":-300,"y":2200,"width":560,"height":160},
		{"type":"text","text":"- create buy on Tanamduit\n\n```typescript\ntanamduitApi.postMfTransactionBuy({\n   partnerTrxId: tanamduitLedgerId,\n   productCode: providerProductCode,\n   trxAmount: amount.toNumber(),\n}, useraccesskey)\n```","id":"ac9630db9e1e34f6","x":-300,"y":2440,"width":560,"height":185},
		{"type":"text","text":"- `statusCategory` === `COMPLETED`\n- store `MutualFundOrder`\n   - `status: SUBSCRIPTION_FILLED`\n   - `executedUnits` = `RESPONSE.trxUnits`\n- store `TanamduitLedger`\n   - `trxUnit: RESPONSE.trxUnits`\n   - `trxDate: RESPONSE.trxDate`\n   - `trxFee: RESPONSE.trxFee`","id":"84839637285dceec","x":-467,"y":5400,"width":418,"height":200},
		{"type":"text","text":"- Push notification for order completion","id":"06e15f82c86732ec","x":-210,"y":5720,"width":420,"height":50,"color":"3"},
		{"type":"text","text":"# 9:15 AM JKT (every day)\n- `SCHEDULER_EVENTS.DAILY_BATCH_CHECK_SUBSCRIBE_ORDER_STATUS`","id":"37940afdc37c2e76","x":430,"y":4370,"width":420,"height":100},
		{"type":"text","text":"- slack tech alert channel\n   - pendingBuyOrderCount: 25\n   - orchestrationExecSecs: 120.023","id":"da086b0bc8cb7493","x":565,"y":5150,"width":325,"height":90,"color":"3"},
		{"type":"text","text":"- group booking ledgers by 10\n   - send events to check all (10) orders\n   - wait 60 secs","id":"a30e434af549d9d3","x":210,"y":4840,"width":480,"height":100},
		{"type":"text","text":"- triggers twice per day\n\n---\n\n- when rotate process triggered\n   - lock & archive the pervious `MF_PARTNER_REMITTANCE_LEDGER`\n---\n  - creates a separate DB txn, generate & sent multiple bank transfers\n      - saves in `MF_PARTNER_REMITTANCE_TRANSACTIONS` accordingly\n      - transfer from (BPR) NTD to fund manager's accounts\n   - NTD account should remain 0 balance at EOD\n```typescript\nconst bankingResp = await this.bprApi.createInterbankTransfer({\n   amount: summedAmount.toNumber(), // all the order amount (with the same product id) summed up \n   description,\n   nexReferenceId: tanamduitRemittanceTransaction.id,\n   receiverAccountBankCode: remittanceDisbBankCode, // mutual_fund_product[\"provider_remittance_bank_code\"]\n   receiverAccountName: provider_remittance_acc_name, // mutual_fund_product[\"provider_remittance_acc_number\"]\n   receiverAccountNumber: provider_remittance_acc_number, // mutual_fund_product[\"provider_remittance_acc_name\"]\n   senderAccountId: this.bprMutualFundRemittanceNtdAccountId, // send from the BPR NTD account\n})\n```","id":"6c019ef2253c968b","x":-1860,"y":4160,"width":780,"height":440},
		{"type":"text","text":"- completed refund transfer\n---\n- store `MutualFundTransaction`\n   - `status: COMPLETED`\n   - `amount: RECORD.amount`\n- store `MutualFundOrder`\n   - `status: SUBSCRIPTION_REFUNDED`\n   - `exectutedUnits: null`","id":"a14133004c959ed8","x":2700,"y":5880,"width":502,"height":220},
		{"type":"text","text":"- OUT\n   - `NotificationEvent.INVEST_MF_SUBSCRIPTION_FAILED`","id":"ff4e3bebee1a82d6","x":2700,"y":6140,"width":502,"height":60,"color":"4"},
		{"type":"text","text":"- unhandled\n   - orders remains at (external) `PENDING`, no retry or tech alerts","id":"64c0e6262179e791","x":3220,"y":5980,"width":492,"height":80},
		{"type":"text","text":"- user sees a (external) failed order (on mobile)","id":"874e8847c381395b","x":2960,"y":6360,"width":359,"height":60,"color":"3"},
		{"type":"text","text":"BPR transfer webhook","id":"7776796c561ed86c","x":4300,"y":5200,"width":250,"height":60},
		{"type":"text","text":"- `src/domain/investment/mutualFund/VerifyIsMutualFundRefundTransferQueryHandler.ts`\n- exist a valid (`ASSET_TXN_REJECTED_FIAT_REFUND_PENDING`) MF order\n- contains a pending refund `mutual_fund_transaction`\n   - purpose = `SUBSCRIPTION_ORDER_CHARGE_REFUND`\n   - status = `PENDING`","id":"13de3f67a42df6bf","x":3540,"y":5300,"width":602,"height":130},
		{"type":"text","text":"- if (success) banking magic params were used in the original buy order\n   - skip transfer initialization\n---","id":"e0654c6a0ad61a41","x":3060,"y":4210,"width":872,"height":100},
		{"type":"text","text":"- indirectly affects the status of the next day","id":"58a4b5299db1740f","x":-1017,"y":4644,"width":250,"height":60},
		{"type":"text","text":"- each manager received summed funds\n- verify fund delivery\n- corresponding orders are then updated on the Tanamduit platform","id":"18822f66fd86d8cf","x":-1760,"y":4700,"width":580,"height":100},
		{"type":"text","text":"- transfer status\n   - `COMPLETED`\n   - `FAILED`","id":"a4ace774da508468","x":3106,"y":5510,"width":180,"height":80},
		{"type":"text","text":"- IN\n  - `MutualFundTopic.SUBSCRIBE_ORDER.REFUND_TXN_UPDATED`\n```typescript\n{\n  refundTxnId: string // id of mutual_fund_transaction\n  transferStatus: MutualFundBankingTransferStatus\n}\n```","id":"6377acc24e42c7d7","x":2700,"y":5660,"width":502,"height":180},
		{"type":"text","text":"- when refund to a BPR-based account\n```typescript\nconst { accountNumber } = bprApi.getBankAccount(params.bprBankingClient.accountId)\n\nbprApi.createInterbankTransfer({\n   senderAccountId: dependencies.bprMutualFundNtdAccountId, // sent by BPR NTD account\n   nexReferenceId: params.referenceId, // a reference to the transfer record (stored in Nex)\n   receiverAccountName: params.bprBankingClient.user.fullName, // customer name of that bank account (using full name from user, feels hacky) \n   receiverAccountNumber: accountNumber, // account number of that bank account (in BPR case, a remote request is required to retrieve this)\n   receiverAccountBankCode: params.bprBankingClient.bankCode, // bank code of that bank account\n   amount: params.amount,\n   description: MF_BANKING_CHARGE_REFUND_TRANSFER_DESCRIPTION\n})\n```","id":"a31328c1868bf14e","x":2717,"y":4630,"width":1043,"height":260},
		{"type":"text","text":"- when refund to a BAAS-based account\n```typescript\nbprApi.createInterbankTransfer({\n   senderAccountId: dependencies.bprMutualFundNtdAccountId, // sent by BPR NTD account\n   nexReferenceId: params.referenceId, // a reference to the transfer record (stored in Nex)\n   receiverAccountBankCode: params.baasBankingClient.bankCode, // bank code of that bank account, assuming it's always BSS now\n   receiverAccountName: userFullName, // customer name of that bank account (using full name from user, feels hacky) \n   receiverAccountNumber: params.baasBankingClient.accountNumber, // account number of that bank account (in BAAS case, account number are visible in prod accounts)\n   description: MF_BANKING_CHARGE_REFUND_TRANSFER_DESCRIPTION,\n   amount: params.amount\n})\n```","id":"c2e07fe246aaffc6","x":2717,"y":4910,"width":1043,"height":240},
		{"type":"text","text":"- BAAS API wouldn't be used in any of the refund flows\n   - as the fund source being always the BPR NTD account","id":"2b4d54c4ac61b265","x":3060,"y":4410,"width":872,"height":100},
		{"type":"text","text":"- IN\n  - `APPLICATION_EVENTS.SUBSCRIBE_ASSET_BOOKING_REJECTED`","id":"02f676ffef18213c","x":2722,"y":3140,"width":500,"height":71},
		{"type":"text","text":"- checks\n   - the original payment method (bank account) that's used","id":"40d399be167c8a86","x":2722,"y":3280,"width":500,"height":80},
		{"type":"text","text":"- (note) retry isn't implemented for refund transfers\n---","id":"f171502ef1acbdf2","x":2700,"y":3840,"width":1232,"height":90},
		{"type":"text","text":"-  find a `mutual_fund_order` with `ASSET_TXN_REJECTED` status\n-  find a `mutual_fund_transaction` matching\n   - purpose should be `SUBSCRIPTION_ORDER_CHARGE`\n   - status should be `COMPLETED`\n   - order id should match step 1.\n-  there shouldn't be an existing ongoing refund transaction on this order (prevent double spend)","id":"07dd07559ff82986","x":2700,"y":3950,"width":616,"height":160},
		{"type":"text","text":"- OUT\n   - `BANKING_ADAPTER_EVENTS.BPR_CREATE_SUBSCRIBE_REFUND_TRANSFER`\n   - `BANKING_ADAPTER_EVENTS.BAAS_CREATE_SUBSCRIBE_REFUND_TRANSFER`","id":"a8f3c1426efeb645","x":2722,"y":3420,"width":500,"height":80},
		{"id":"7951acaf82fcd1bc","x":300,"y":9220,"width":250,"height":60,"color":"4","type":"text","text":"æºè­ç®æ¨"},
		{"id":"328b260d8c08f5be","x":1019,"y":9190,"width":250,"height":60,"color":"1","type":"text","text":"é¢ä¹ç®æ¨"},
		{"id":"a8e316508bead65a","x":820,"y":9820,"width":250,"height":60,"color":"5","type":"text","text":"äººè/æç¾¤æ¶ç®æ¨"},
		{"id":"58c3aa5a9f82a6f8","x":660,"y":9520,"width":250,"height":60,"type":"text","text":"### Now"}
	],
	"edges":[
		{"id":"49ea0c9731796c61","fromNode":"81d501f5f0d7cbe0","fromSide":"right","toNode":"e94797e97997de08","toSide":"left"},
		{"id":"54af6948f88d6c49","fromNode":"b877fb8f4fc13487","fromSide":"top","toNode":"c74687bf42fdf37a","toSide":"bottom","color":"1"},
		{"id":"6e2eaf606c5af1eb","fromNode":"e94797e97997de08","fromSide":"bottom","toNode":"b877fb8f4fc13487","toSide":"right","color":"1","label":"validation error (400)"},
		{"id":"482b6b13ce0a82f0","fromNode":"e94797e97997de08","fromSide":"bottom","toNode":"004780045ca33324","toSide":"top","color":"4","label":"passed validation"},
		{"id":"ff376017b384a50d","fromNode":"7bd2fcef7e9ae0e5","fromSide":"left","toNode":"b877fb8f4fc13487","toSide":"right","color":"1","label":"service unavailable (500)"},
		{"id":"b332db5d3b1f91bb","fromNode":"c9b75bc86ea96e05","fromSide":"left","toNode":"5c84615b28645aff","toSide":"left","color":"4","label":"transfer request 200"},
		{"id":"b2f5df1809e10733","fromNode":"c9b75bc86ea96e05","fromSide":"left","toNode":"7bd2fcef7e9ae0e5","toSide":"bottom","color":"1","label":"transfer request 500/400"},
		{"id":"ce7828807e64212a","fromNode":"2e0601ea264586c4","fromSide":"left","toNode":"7bd2fcef7e9ae0e5","toSide":"right","color":"1"},
		{"id":"2fc4e8866a8883a9","fromNode":"222a70ff84129ed7","fromSide":"top","toNode":"c74687bf42fdf37a","toSide":"bottom","color":"4"},
		{"id":"183713c5d54cc7cf","fromNode":"5c84615b28645aff","fromSide":"bottom","toNode":"ac9e3b0194b99c5d","toSide":"right","color":"4"},
		{"id":"86c798eed9d7976c","fromNode":"ebd3d6ffff5186f1","fromSide":"bottom","toNode":"9cfd543d0e52e748","toSide":"top","color":"6","label":"exist a valid (pending) MF order"},
		{"id":"6d51b8a37b2cf571","fromNode":"4c9ade30159bb7cd","fromSide":"bottom","toNode":"9cfd543d0e52e748","toSide":"top","color":"6","label":"exist a valid (pending) MF order"},
		{"id":"d6c5482fb8a5caf8","fromNode":"857fbaa5f173651f","fromSide":"right","toNode":"9cfd543d0e52e748","toSide":"top","color":"6"},
		{"id":"48de24faf4960ba4","fromNode":"b2910d39375e8705","fromSide":"bottom","toNode":"79949695bdfd8ecc","toSide":"top","color":"6"},
		{"id":"9398c0ce94d361db","fromNode":"2620bdace78d6b68","fromSide":"bottom","toNode":"ac9630db9e1e34f6","toSide":"top","color":"4","label":"received user access key"},
		{"id":"11a70223db080ce5","fromNode":"ac9630db9e1e34f6","fromSide":"left","toNode":"03f8f9c9e62584ec","toSide":"left","color":"4","label":"Tanamduit 200"},
		{"id":"8b5c5c4479d4462a","fromNode":"ac9630db9e1e34f6","fromSide":"right","toNode":"4e93d75977b344b3","toSide":"top","color":"1","label":"Tanamduit 500/400"},
		{"id":"e8209c0e5340e4c0","fromNode":"abff90d9fa3e486a","fromSide":"right","toNode":"4e93d75977b344b3","toSide":"top","color":"1"},
		{"id":"f0328e29d297b0bf","fromNode":"7d29f74c5c1c316b","fromSide":"left","toNode":"03f8f9c9e62584ec","toSide":"left","color":"4"},
		{"id":"61983a80eb7ff365","fromNode":"02f676ffef18213c","fromSide":"bottom","toNode":"40d399be167c8a86","toSide":"top"},
		{"id":"7981a605aee1e195","fromNode":"40d399be167c8a86","fromSide":"bottom","toNode":"a8f3c1426efeb645","toSide":"top"},
		{"id":"9484d915e63a3d19","fromNode":"4e93d75977b344b3","fromSide":"bottom","toNode":"d3c640358f7998f8","toSide":"left","color":"6","label":"asset booking unavailable, should refund customer"},
		{"id":"c1312f183b262bb3","fromNode":"e6974ca5229c8fa1","fromSide":"bottom","toNode":"8bbfbbcdd947e103","toSide":"top"},
		{"id":"c9fd84540af3a682","fromNode":"a8f3c1426efeb645","fromSide":"bottom","toNode":"479863485d6428fd","toSide":"top","color":"6","label":"triggers refund"},
		{"id":"47358ee2a029f337","fromNode":"0b9f6513403f7e2d","fromSide":"bottom","toNode":"b2910d39375e8705","toSide":"top"},
		{"id":"6561af3a77586563","fromNode":"b7998624053c3455","fromSide":"bottom","toNode":"0b9f6513403f7e2d","toSide":"top"},
		{"id":"5e398747c533672c","fromNode":"c007ab3eeb218238","fromSide":"bottom","toNode":"46f9f3c70f9162d6","toSide":"top"},
		{"id":"d7d0adec4e16e066","fromNode":"46f9f3c70f9162d6","fromSide":"bottom","toNode":"e12b3a0484c9199c","toSide":"top"},
		{"id":"f23bcafc411d70e7","fromNode":"e12b3a0484c9199c","fromSide":"bottom","toNode":"b066085f5015ba1c","toSide":"bottom"},
		{"id":"d9f32ff9540b0dcc","fromNode":"03f8f9c9e62584ec","fromSide":"bottom","toNode":"634dc101b36444b6","toSide":"top","color":"6","label":"if using filled magic params"},
		{"id":"411bfc3114382e78","fromNode":"37940afdc37c2e76","fromSide":"bottom","toNode":"33fe1154e20ebe14","toSide":"top"},
		{"id":"ef244f208fd6f67c","fromNode":"a30e434af549d9d3","fromSide":"left","toNode":"634dc101b36444b6","toSide":"top","color":"6"},
		{"id":"73d3d20e261fcb3a","fromNode":"33fe1154e20ebe14","fromSide":"bottom","toNode":"da086b0bc8cb7493","toSide":"left","label":"all done"},
		{"id":"370787b396bde3a9","fromNode":"8bbfbbcdd947e103","fromSide":"bottom","toNode":"84839637285dceec","toSide":"top","label":"success"},
		{"id":"3bbcc1bb5333d955","fromNode":"8bbfbbcdd947e103","fromSide":"bottom","toNode":"5ed9e1ed23ff73c7","toSide":"top","label":"fail"},
		{"id":"564b4daefa163312","fromNode":"84839637285dceec","fromSide":"bottom","toNode":"06e15f82c86732ec","toSide":"top","color":"6"},
		{"id":"db1c0a8fc1648e3e","fromNode":"857fbaa5f173651f","fromSide":"left","toNode":"5c84615b28645aff","toSide":"left","color":"4"},
		{"id":"333577e723b596c5","fromNode":"7881e466bdbc5759","fromSide":"right","toNode":"3b80294a9bfa844b","toSide":"left","toEnd":"none"},
		{"id":"6687ec884de9f68d","fromNode":"c74687bf42fdf37a","fromSide":"right","toNode":"81d501f5f0d7cbe0","toSide":"left"},
		{"id":"16a7016663edd79d","fromNode":"ac9e3b0194b99c5d","fromSide":"top","toNode":"222a70ff84129ed7","toSide":"bottom","color":"4"},
		{"id":"3907db093b29e171","fromNode":"077749cdaf40839b","fromSide":"bottom","toNode":"b7998624053c3455","toSide":"top","color":"4"},
		{"id":"0632619b27276069","fromNode":"077749cdaf40839b","fromSide":"bottom","toNode":"c007ab3eeb218238","toSide":"top","color":"1"},
		{"id":"79565a969f164f28","fromNode":"07dd07559ff82986","fromSide":"bottom","toNode":"e0654c6a0ad61a41","toSide":"top"},
		{"id":"030fc187bef3e61e","fromNode":"e0654c6a0ad61a41","fromSide":"bottom","toNode":"2b4d54c4ac61b265","toSide":"top"},
		{"id":"c6121911f9c20834","fromNode":"2b4d54c4ac61b265","fromSide":"bottom","toNode":"17bd59f7766e8994","toSide":"top"},
		{"id":"6ea4ebd22d28ee2d","fromNode":"7776796c561ed86c","fromSide":"bottom","toNode":"13de3f67a42df6bf","toSide":"right","color":"6"},
		{"id":"51d1915d441497b9","fromNode":"6377acc24e42c7d7","fromSide":"bottom","toNode":"a14133004c959ed8","toSide":"top"},
		{"id":"7ef7ef05dd3e7013","fromNode":"a4ace774da508468","fromSide":"bottom","toNode":"6377acc24e42c7d7","toSide":"top","color":"4"},
		{"id":"9e52e7fe90c3f041","fromNode":"a14133004c959ed8","fromSide":"bottom","toNode":"ff4e3bebee1a82d6","toSide":"top"},
		{"id":"b04c0616919a6343","fromNode":"a4ace774da508468","fromSide":"bottom","toNode":"64c0e6262179e791","toSide":"top","color":"1"},
		{"id":"0e9bbd85f5214b0b","fromNode":"13de3f67a42df6bf","fromSide":"left","toNode":"22b8c7da9b645c87","toSide":"top","color":"6"},
		{"id":"e354ea6099a2a285","fromNode":"ff4e3bebee1a82d6","fromSide":"bottom","toNode":"874e8847c381395b","toSide":"top"}
	]
}